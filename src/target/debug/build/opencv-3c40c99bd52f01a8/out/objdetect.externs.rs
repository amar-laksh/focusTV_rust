extern "C" {
#[doc(hidden)] pub fn cv_objdetect_cv_groupRectangles_VectorOfRect_rectList_VectorOfint_rejectLevels_VectorOfdouble_levelWeights_int_groupThreshold_double_eps(rectList: *mut c_void, rejectLevels: *mut c_void, levelWeights: *mut c_void, groupThreshold: i32, eps: f64) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_objdetect_cv_groupRectangles_VectorOfRect_rectList_VectorOfint_weights_int_groupThreshold_double_eps(rectList: *mut c_void, weights: *mut c_void, groupThreshold: i32, eps: f64) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_objdetect_cv_groupRectangles_VectorOfRect_rectList_int_groupThreshold_double_eps(rectList: *mut c_void, groupThreshold: i32, eps: f64) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_objdetect_cv_groupRectangles_VectorOfRect_rectList_int_groupThreshold_double_eps_VectorOfint_weights_VectorOfdouble_levelWeights(rectList: *mut c_void, groupThreshold: i32, eps: f64, weights: *mut c_void, levelWeights: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_objdetect_cv_groupRectangles_meanshift_VectorOfRect_rectList_VectorOfdouble_foundWeights_VectorOfdouble_foundScales_double_detectThreshold_Size_winDetSize(rectList: *mut c_void, foundWeights: *mut c_void, foundScales: *mut c_void, detectThreshold: f64, winDetSize: ::core::Size) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_objdetect_cv_linemod_colormap_Mat_quantized_Mat_dst(quantized: *mut c_void, dst: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_objdetect_cv_linemod_getDefaultLINE() -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_objdetect_cv_linemod_getDefaultLINEMOD() -> cv_return_value_void_X;
pub fn cv_delete_CascadeClassifier(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_objdetect_cv_CascadeClassifier_CascadeClassifier() -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_objdetect_cv_CascadeClassifier_CascadeClassifier_String_filename(filename: *const c_char) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_objdetect_cv_CascadeClassifier_empty(instance: *const c_void) -> cv_return_value_char;
#[doc(hidden)] pub fn cv_objdetect_cv_CascadeClassifier_load_String_filename(instance: *mut c_void, filename: *const c_char) -> cv_return_value_char;
#[doc(hidden)] pub fn cv_objdetect_cv_CascadeClassifier_detectMultiScale_Mat_image_VectorOfRect_objects_double_scaleFactor_int_minNeighbors_int_flags_Size_minSize_Size_maxSize(instance: *mut c_void, image: *mut c_void, objects: *mut c_void, scaleFactor: f64, minNeighbors: i32, flags: i32, minSize: ::core::Size, maxSize: ::core::Size) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_objdetect_cv_CascadeClassifier_detectMultiScale_Mat_image_VectorOfRect_objects_VectorOfint_rejectLevels_VectorOfdouble_levelWeights_double_scaleFactor_int_minNeighbors_int_flags_Size_minSize_Size_maxSize_bool_outputRejectLevels(instance: *mut c_void, image: *mut c_void, objects: *mut c_void, rejectLevels: *mut c_void, levelWeights: *mut c_void, scaleFactor: f64, minNeighbors: i32, flags: i32, minSize: ::core::Size, maxSize: ::core::Size, outputRejectLevels: bool) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_objdetect_cv_CascadeClassifier_isOldFormatCascade(instance: *const c_void) -> cv_return_value_char;
#[doc(hidden)] pub fn cv_objdetect_cv_CascadeClassifier_getOriginalWindowSize(instance: *const c_void) -> cv_return_value_c_Size;
#[doc(hidden)] pub fn cv_objdetect_cv_CascadeClassifier_getFeatureType(instance: *const c_void) -> cv_return_value_int;
#[doc(hidden)] pub fn cv_objdetect_cv_CascadeClassifier_setImage_Mat_unamed_arg(instance: *mut c_void, unamed_arg: *mut c_void) -> cv_return_value_char;
#[doc(hidden)] pub fn cv_objdetect_cv_CascadeClassifier_setFaceDetectionMaskGenerator(instance: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_objdetect_cv_CascadeClassifier_MaskGenerator_initializeMask_Mat_unamed_arg(instance: *mut c_void, unamed_arg: *mut c_void) -> cv_return_value_void;
pub fn cv_delete_DetectionROI(ptr : *mut c_void);
pub fn cv_delete_FeatureEvaluator(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_objdetect_cv_FeatureEvaluator_clone(instance: *const c_void) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_objdetect_cv_FeatureEvaluator_getFeatureType(instance: *const c_void) -> cv_return_value_int;
#[doc(hidden)] pub fn cv_objdetect_cv_FeatureEvaluator_setImage_Mat_img_Size_origWinSize(instance: *mut c_void, img: *mut c_void, origWinSize: ::core::Size) -> cv_return_value_char;
#[doc(hidden)] pub fn cv_objdetect_cv_FeatureEvaluator_setWindow_Point_p(instance: *mut c_void, p: ::core::Point) -> cv_return_value_char;
#[doc(hidden)] pub fn cv_objdetect_cv_FeatureEvaluator_calcOrd_int_featureIdx(instance: *const c_void, featureIdx: i32) -> cv_return_value_double;
#[doc(hidden)] pub fn cv_objdetect_cv_FeatureEvaluator_calcCat_int_featureIdx(instance: *const c_void, featureIdx: i32) -> cv_return_value_int;
#[doc(hidden)] pub fn cv_objdetect_cv_FeatureEvaluator_create_int_type(instance: *mut c_void, _type: i32) -> cv_return_value_void_X;
pub fn cv_delete_HOGDescriptor(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_objdetect_cv_HOGDescriptor_HOGDescriptor() -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_objdetect_cv_HOGDescriptor_HOGDescriptor_Size__winSize_Size__blockSize_Size__blockStride_Size__cellSize_int__nbins_int__derivAperture_double__winSigma_int__histogramNormType_double__L2HysThreshold_bool__gammaCorrection_int__nlevels(_winSize: ::core::Size, _blockSize: ::core::Size, _blockStride: ::core::Size, _cellSize: ::core::Size, _nbins: i32, _derivAperture: i32, _winSigma: f64, _histogramNormType: i32, _L2HysThreshold: f64, _gammaCorrection: bool, _nlevels: i32) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_objdetect_cv_HOGDescriptor_HOGDescriptor_HOGDescriptor_d(d: *mut c_void) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_objdetect_cv_HOGDescriptor_getDescriptorSize(instance: *const c_void) -> cv_return_value_std_size_t;
#[doc(hidden)] pub fn cv_objdetect_cv_HOGDescriptor_checkDetectorSize(instance: *const c_void) -> cv_return_value_char;
#[doc(hidden)] pub fn cv_objdetect_cv_HOGDescriptor_getWinSigma(instance: *const c_void) -> cv_return_value_double;
#[doc(hidden)] pub fn cv_objdetect_cv_HOGDescriptor_setSVMDetector_InputArray__svmdetector(instance: *mut c_void, _svmdetector: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_objdetect_cv_HOGDescriptor_copyTo_HOGDescriptor_c(instance: *const c_void, c: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_objdetect_cv_HOGDescriptor_compute_Mat_img_VectorOffloat_descriptors_Size_winStride_Size_padding_VectorOfPoint_locations(instance: *const c_void, img: *mut c_void, descriptors: *mut c_void, winStride: ::core::Size, padding: ::core::Size, locations: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_objdetect_cv_HOGDescriptor_detect_Mat_img_VectorOfPoint_foundLocations_VectorOfdouble_weights_double_hitThreshold_Size_winStride_Size_padding_VectorOfPoint_searchLocations(instance: *const c_void, img: *mut c_void, foundLocations: *mut c_void, weights: *mut c_void, hitThreshold: f64, winStride: ::core::Size, padding: ::core::Size, searchLocations: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_objdetect_cv_HOGDescriptor_detect_Mat_img_VectorOfPoint_foundLocations_double_hitThreshold_Size_winStride_Size_padding_VectorOfPoint_searchLocations(instance: *const c_void, img: *mut c_void, foundLocations: *mut c_void, hitThreshold: f64, winStride: ::core::Size, padding: ::core::Size, searchLocations: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_objdetect_cv_HOGDescriptor_detectMultiScale_Mat_img_VectorOfRect_foundLocations_VectorOfdouble_foundWeights_double_hitThreshold_Size_winStride_Size_padding_double_scale_double_finalThreshold_bool_useMeanshiftGrouping(instance: *const c_void, img: *mut c_void, foundLocations: *mut c_void, foundWeights: *mut c_void, hitThreshold: f64, winStride: ::core::Size, padding: ::core::Size, scale: f64, finalThreshold: f64, useMeanshiftGrouping: bool) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_objdetect_cv_HOGDescriptor_detectMultiScale_Mat_img_VectorOfRect_foundLocations_double_hitThreshold_Size_winStride_Size_padding_double_scale_double_finalThreshold_bool_useMeanshiftGrouping(instance: *const c_void, img: *mut c_void, foundLocations: *mut c_void, hitThreshold: f64, winStride: ::core::Size, padding: ::core::Size, scale: f64, finalThreshold: f64, useMeanshiftGrouping: bool) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_objdetect_cv_HOGDescriptor_computeGradient_Mat_img_Mat_grad_Mat_angleOfs_Size_paddingTL_Size_paddingBR(instance: *const c_void, img: *mut c_void, grad: *mut c_void, angleOfs: *mut c_void, paddingTL: ::core::Size, paddingBR: ::core::Size) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_objdetect_cv_HOGDescriptor_getDefaultPeopleDetector(instance: *mut c_void) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_objdetect_cv_HOGDescriptor_getDaimlerPeopleDetector(instance: *mut c_void) -> cv_return_value_void_X;
pub fn cv_delete_LatentSvmDetector(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_objdetect_cv_LatentSvmDetector_LatentSvmDetector() -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_objdetect_cv_LatentSvmDetector_LatentSvmDetector_VectorOfString_filenames_VectorOfString_classNames(filenames: *mut c_void, classNames: *mut c_void) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_objdetect_cv_LatentSvmDetector_clear(instance: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_objdetect_cv_LatentSvmDetector_empty(instance: *const c_void) -> cv_return_value_char;
#[doc(hidden)] pub fn cv_objdetect_cv_LatentSvmDetector_load_VectorOfString_filenames_VectorOfString_classNames(instance: *mut c_void, filenames: *mut c_void, classNames: *mut c_void) -> cv_return_value_char;
#[doc(hidden)] pub fn cv_objdetect_cv_LatentSvmDetector_detect_Mat_image_VectorOfObjectDetection_objectDetections_float_overlapThreshold_int_numThreads(instance: *mut c_void, image: *mut c_void, objectDetections: *mut c_void, overlapThreshold: f32, numThreads: i32) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_objdetect_cv_LatentSvmDetector_getClassNames(instance: *const c_void) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_objdetect_cv_LatentSvmDetector_getClassCount(instance: *const c_void) -> cv_return_value_std_size_t;
pub fn cv_delete_ObjectDetection(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_objdetect_cv_LatentSvmDetector_ObjectDetection_ObjectDetection() -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_objdetect_cv_LatentSvmDetector_ObjectDetection_ObjectDetection_Rect_rect_float_score_int_classID(rect: ::core::Rect, score: f32, classID: i32) -> cv_return_value_void_X;
pub fn cv_delete_SimilarRects(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_objdetect_cv_SimilarRects_SimilarRects_double__eps(_eps: f64) -> cv_return_value_void_X;
pub fn cv_delete_ColorGradient(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_objdetect_cv_linemod_ColorGradient_ColorGradient() -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_objdetect_cv_linemod_ColorGradient_ColorGradient_float_weak_threshold_size_t_num_features_float_strong_threshold(weak_threshold: f32, num_features: size_t, strong_threshold: f32) -> cv_return_value_void_X;
pub fn cv_delete_DepthNormal(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_objdetect_cv_linemod_DepthNormal_DepthNormal() -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_objdetect_cv_linemod_DepthNormal_DepthNormal_int_distance_threshold_int_difference_threshold_size_t_num_features_int_extract_threshold(distance_threshold: i32, difference_threshold: i32, num_features: size_t, extract_threshold: i32) -> cv_return_value_void_X;
pub fn cv_delete_Detector(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_objdetect_cv_linemod_Detector_Detector() -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_objdetect_cv_linemod_Detector_getT_int_pyramid_level(instance: *const c_void, pyramid_level: i32) -> cv_return_value_int;
#[doc(hidden)] pub fn cv_objdetect_cv_linemod_Detector_pyramidLevels(instance: *const c_void) -> cv_return_value_int;
#[doc(hidden)] pub fn cv_objdetect_cv_linemod_Detector_numTemplates(instance: *const c_void) -> cv_return_value_int;
#[doc(hidden)] pub fn cv_objdetect_cv_linemod_Detector_numClasses(instance: *const c_void) -> cv_return_value_int;
pub fn cv_delete_Feature(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_objdetect_cv_linemod_Feature_Feature() -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_objdetect_cv_linemod_Feature_Feature_int_x_int_y_int_label(x: i32, y: i32, label: i32) -> cv_return_value_void_X;
pub fn cv_delete_Match(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_objdetect_cv_linemod_Match_Match() -> cv_return_value_void_X;
pub fn cv_delete_Template(ptr : *mut c_void);
}
