#include <cstdio>
#include "opencv2/opencv_modules.hpp"
#include "opencv2/imgproc/imgproc.hpp"
using namespace cv;
int main(int argc, char**argv) {
    printf("pub const BORDER_CONSTANT:i32 = 0x%x;\n", cv::BORDER_CONSTANT);
    printf("pub const BORDER_DEFAULT:i32 = 0x%x;\n", cv::BORDER_DEFAULT);
    printf("pub const BORDER_REFLECT:i32 = 0x%x;\n", cv::BORDER_REFLECT);
    printf("pub const BORDER_REFLECT101:i32 = 0x%x;\n", cv::BORDER_REFLECT101);
    printf("pub const BORDER_REFLECT_101:i32 = 0x%x;\n", cv::BORDER_REFLECT_101);
    printf("pub const BORDER_REPLICATE:i32 = 0x%x;\n", cv::BORDER_REPLICATE);
    printf("pub const BORDER_TRANSPARENT:i32 = 0x%x;\n", cv::BORDER_TRANSPARENT);
    printf("pub const BORDER_WRAP:i32 = 0x%x;\n", cv::BORDER_WRAP);
    printf("pub const CHAIN_APPROX_NONE:i32 = 0x%x;\n", cv::CHAIN_APPROX_NONE);
    printf("pub const CHAIN_APPROX_SIMPLE:i32 = 0x%x;\n", cv::CHAIN_APPROX_SIMPLE);
    printf("pub const CHAIN_APPROX_TC89_KCOS:i32 = 0x%x;\n", cv::CHAIN_APPROX_TC89_KCOS);
    printf("pub const CHAIN_APPROX_TC89_L1:i32 = 0x%x;\n", cv::CHAIN_APPROX_TC89_L1);
    printf("pub const COLOR_BGR2YUV_IYUV:i32 = 0x%x;\n", cv::COLOR_BGR2YUV_IYUV);
    printf("pub const COLOR_BGRA2RGB:i32 = 0x%x;\n", cv::COLOR_BGRA2RGB);
    printf("pub const COLOR_BGRA2YUV_IYUV:i32 = 0x%x;\n", cv::COLOR_BGRA2YUV_IYUV);
    printf("pub const COLOR_BayerBG2RGB:i32 = 0x%x;\n", cv::COLOR_BayerBG2RGB);
    printf("pub const COLOR_BayerBG2RGB_VNG:i32 = 0x%x;\n", cv::COLOR_BayerBG2RGB_VNG);
    printf("pub const COLOR_BayerGB2RGB:i32 = 0x%x;\n", cv::COLOR_BayerGB2RGB);
    printf("pub const COLOR_BayerGB2RGB_VNG:i32 = 0x%x;\n", cv::COLOR_BayerGB2RGB_VNG);
    printf("pub const COLOR_BayerGR2RGB:i32 = 0x%x;\n", cv::COLOR_BayerGR2RGB);
    printf("pub const COLOR_BayerGR2RGB_VNG:i32 = 0x%x;\n", cv::COLOR_BayerGR2RGB_VNG);
    printf("pub const COLOR_BayerRG2RGB:i32 = 0x%x;\n", cv::COLOR_BayerRG2RGB);
    printf("pub const COLOR_BayerRG2RGB_VNG:i32 = 0x%x;\n", cv::COLOR_BayerRG2RGB_VNG);
    printf("pub const COLOR_GRAY2RGB:i32 = 0x%x;\n", cv::COLOR_GRAY2RGB);
    printf("pub const COLOR_GRAY2RGBA:i32 = 0x%x;\n", cv::COLOR_GRAY2RGBA);
    printf("pub const COLOR_RGB2BGR:i32 = 0x%x;\n", cv::COLOR_RGB2BGR);
    printf("pub const COLOR_RGB2BGRA:i32 = 0x%x;\n", cv::COLOR_RGB2BGRA);
    printf("pub const COLOR_RGB2RGBA:i32 = 0x%x;\n", cv::COLOR_RGB2RGBA);
    printf("pub const COLOR_RGB2YUV_IYUV:i32 = 0x%x;\n", cv::COLOR_RGB2YUV_IYUV);
    printf("pub const COLOR_RGBA2BGRA:i32 = 0x%x;\n", cv::COLOR_RGBA2BGRA);
    printf("pub const COLOR_RGBA2RGB:i32 = 0x%x;\n", cv::COLOR_RGBA2RGB);
    printf("pub const COLOR_RGBA2YUV_IYUV:i32 = 0x%x;\n", cv::COLOR_RGBA2YUV_IYUV);
    printf("pub const COLOR_YUV2BGRA_I420:i32 = 0x%x;\n", cv::COLOR_YUV2BGRA_I420);
    printf("pub const COLOR_YUV2BGRA_UYNV:i32 = 0x%x;\n", cv::COLOR_YUV2BGRA_UYNV);
    printf("pub const COLOR_YUV2BGRA_Y422:i32 = 0x%x;\n", cv::COLOR_YUV2BGRA_Y422);
    printf("pub const COLOR_YUV2BGRA_YUNV:i32 = 0x%x;\n", cv::COLOR_YUV2BGRA_YUNV);
    printf("pub const COLOR_YUV2BGRA_YUYV:i32 = 0x%x;\n", cv::COLOR_YUV2BGRA_YUYV);
    printf("pub const COLOR_YUV2BGR_I420:i32 = 0x%x;\n", cv::COLOR_YUV2BGR_I420);
    printf("pub const COLOR_YUV2BGR_UYNV:i32 = 0x%x;\n", cv::COLOR_YUV2BGR_UYNV);
    printf("pub const COLOR_YUV2BGR_Y422:i32 = 0x%x;\n", cv::COLOR_YUV2BGR_Y422);
    printf("pub const COLOR_YUV2BGR_YUNV:i32 = 0x%x;\n", cv::COLOR_YUV2BGR_YUNV);
    printf("pub const COLOR_YUV2BGR_YUYV:i32 = 0x%x;\n", cv::COLOR_YUV2BGR_YUYV);
    printf("pub const COLOR_YUV2GRAY_I420:i32 = 0x%x;\n", cv::COLOR_YUV2GRAY_I420);
    printf("pub const COLOR_YUV2GRAY_IYUV:i32 = 0x%x;\n", cv::COLOR_YUV2GRAY_IYUV);
    printf("pub const COLOR_YUV2GRAY_NV12:i32 = 0x%x;\n", cv::COLOR_YUV2GRAY_NV12);
    printf("pub const COLOR_YUV2GRAY_NV21:i32 = 0x%x;\n", cv::COLOR_YUV2GRAY_NV21);
    printf("pub const COLOR_YUV2GRAY_UYNV:i32 = 0x%x;\n", cv::COLOR_YUV2GRAY_UYNV);
    printf("pub const COLOR_YUV2GRAY_Y422:i32 = 0x%x;\n", cv::COLOR_YUV2GRAY_Y422);
    printf("pub const COLOR_YUV2GRAY_YUNV:i32 = 0x%x;\n", cv::COLOR_YUV2GRAY_YUNV);
    printf("pub const COLOR_YUV2GRAY_YUYV:i32 = 0x%x;\n", cv::COLOR_YUV2GRAY_YUYV);
    printf("pub const COLOR_YUV2GRAY_YV12:i32 = 0x%x;\n", cv::COLOR_YUV2GRAY_YV12);
    printf("pub const COLOR_YUV2GRAY_YVYU:i32 = 0x%x;\n", cv::COLOR_YUV2GRAY_YVYU);
    printf("pub const COLOR_YUV2RGBA_I420:i32 = 0x%x;\n", cv::COLOR_YUV2RGBA_I420);
    printf("pub const COLOR_YUV2RGBA_UYNV:i32 = 0x%x;\n", cv::COLOR_YUV2RGBA_UYNV);
    printf("pub const COLOR_YUV2RGBA_Y422:i32 = 0x%x;\n", cv::COLOR_YUV2RGBA_Y422);
    printf("pub const COLOR_YUV2RGBA_YUNV:i32 = 0x%x;\n", cv::COLOR_YUV2RGBA_YUNV);
    printf("pub const COLOR_YUV2RGBA_YUYV:i32 = 0x%x;\n", cv::COLOR_YUV2RGBA_YUYV);
    printf("pub const COLOR_YUV2RGB_I420:i32 = 0x%x;\n", cv::COLOR_YUV2RGB_I420);
    printf("pub const COLOR_YUV2RGB_UYNV:i32 = 0x%x;\n", cv::COLOR_YUV2RGB_UYNV);
    printf("pub const COLOR_YUV2RGB_Y422:i32 = 0x%x;\n", cv::COLOR_YUV2RGB_Y422);
    printf("pub const COLOR_YUV2RGB_YUNV:i32 = 0x%x;\n", cv::COLOR_YUV2RGB_YUNV);
    printf("pub const COLOR_YUV2RGB_YUYV:i32 = 0x%x;\n", cv::COLOR_YUV2RGB_YUYV);
    printf("pub const COLOR_YUV420p2BGR:i32 = 0x%x;\n", cv::COLOR_YUV420p2BGR);
    printf("pub const COLOR_YUV420p2BGRA:i32 = 0x%x;\n", cv::COLOR_YUV420p2BGRA);
    printf("pub const COLOR_YUV420p2GRAY:i32 = 0x%x;\n", cv::COLOR_YUV420p2GRAY);
    printf("pub const COLOR_YUV420p2RGB:i32 = 0x%x;\n", cv::COLOR_YUV420p2RGB);
    printf("pub const COLOR_YUV420p2RGBA:i32 = 0x%x;\n", cv::COLOR_YUV420p2RGBA);
    printf("pub const COLOR_YUV420sp2BGR:i32 = 0x%x;\n", cv::COLOR_YUV420sp2BGR);
    printf("pub const COLOR_YUV420sp2BGRA:i32 = 0x%x;\n", cv::COLOR_YUV420sp2BGRA);
    printf("pub const COLOR_YUV420sp2GRAY:i32 = 0x%x;\n", cv::COLOR_YUV420sp2GRAY);
    printf("pub const COLOR_YUV420sp2RGB:i32 = 0x%x;\n", cv::COLOR_YUV420sp2RGB);
    printf("pub const COLOR_YUV420sp2RGBA:i32 = 0x%x;\n", cv::COLOR_YUV420sp2RGBA);
    printf("pub const CV_BGR2YUV_IYUV:i32 = 0x%x;\n", CV_BGR2YUV_IYUV);
    printf("pub const CV_BGRA2RGB:i32 = 0x%x;\n", CV_BGRA2RGB);
    printf("pub const CV_BGRA2YUV_IYUV:i32 = 0x%x;\n", CV_BGRA2YUV_IYUV);
    printf("pub const CV_BayerBG2RGB:i32 = 0x%x;\n", CV_BayerBG2RGB);
    printf("pub const CV_BayerBG2RGB_VNG:i32 = 0x%x;\n", CV_BayerBG2RGB_VNG);
    printf("pub const CV_BayerGB2RGB:i32 = 0x%x;\n", CV_BayerGB2RGB);
    printf("pub const CV_BayerGB2RGB_VNG:i32 = 0x%x;\n", CV_BayerGB2RGB_VNG);
    printf("pub const CV_BayerGR2RGB:i32 = 0x%x;\n", CV_BayerGR2RGB);
    printf("pub const CV_BayerGR2RGB_VNG:i32 = 0x%x;\n", CV_BayerGR2RGB_VNG);
    printf("pub const CV_BayerRG2RGB:i32 = 0x%x;\n", CV_BayerRG2RGB);
    printf("pub const CV_BayerRG2RGB_VNG:i32 = 0x%x;\n", CV_BayerRG2RGB_VNG);
    printf("pub const CV_CANNY_L2_GRADIENT:i32 = 0x%x;\n", CV_CANNY_L2_GRADIENT);
    printf("pub const CV_COMP_HELLINGER:i32 = 0x%x;\n", CV_COMP_HELLINGER);
    printf("pub const CV_FLOODFILL_FIXED_RANGE:i32 = 0x%x;\n", CV_FLOODFILL_FIXED_RANGE);
    printf("pub const CV_FLOODFILL_MASK_ONLY:i32 = 0x%x;\n", CV_FLOODFILL_MASK_ONLY);
    printf("pub const CV_GRAY2RGB:i32 = 0x%x;\n", CV_GRAY2RGB);
    printf("pub const CV_GRAY2RGBA:i32 = 0x%x;\n", CV_GRAY2RGBA);
    printf("pub const CV_RGB2BGR:i32 = 0x%x;\n", CV_RGB2BGR);
    printf("pub const CV_RGB2BGRA:i32 = 0x%x;\n", CV_RGB2BGRA);
    printf("pub const CV_RGB2RGBA:i32 = 0x%x;\n", CV_RGB2RGBA);
    printf("pub const CV_RGB2YUV_IYUV:i32 = 0x%x;\n", CV_RGB2YUV_IYUV);
    printf("pub const CV_RGBA2BGRA:i32 = 0x%x;\n", CV_RGBA2BGRA);
    printf("pub const CV_RGBA2RGB:i32 = 0x%x;\n", CV_RGBA2RGB);
    printf("pub const CV_RGBA2YUV_IYUV:i32 = 0x%x;\n", CV_RGBA2YUV_IYUV);
    printf("pub const CV_SUBDIV2D_VIRTUAL_POINT_FLAG:i32 = 0x%x;\n", CV_SUBDIV2D_VIRTUAL_POINT_FLAG);
    printf("pub const CV_YUV2BGRA_I420:i32 = 0x%x;\n", CV_YUV2BGRA_I420);
    printf("pub const CV_YUV2BGRA_UYNV:i32 = 0x%x;\n", CV_YUV2BGRA_UYNV);
    printf("pub const CV_YUV2BGRA_Y422:i32 = 0x%x;\n", CV_YUV2BGRA_Y422);
    printf("pub const CV_YUV2BGRA_YUNV:i32 = 0x%x;\n", CV_YUV2BGRA_YUNV);
    printf("pub const CV_YUV2BGRA_YUYV:i32 = 0x%x;\n", CV_YUV2BGRA_YUYV);
    printf("pub const CV_YUV2BGR_I420:i32 = 0x%x;\n", CV_YUV2BGR_I420);
    printf("pub const CV_YUV2BGR_UYNV:i32 = 0x%x;\n", CV_YUV2BGR_UYNV);
    printf("pub const CV_YUV2BGR_Y422:i32 = 0x%x;\n", CV_YUV2BGR_Y422);
    printf("pub const CV_YUV2BGR_YUNV:i32 = 0x%x;\n", CV_YUV2BGR_YUNV);
    printf("pub const CV_YUV2BGR_YUYV:i32 = 0x%x;\n", CV_YUV2BGR_YUYV);
    printf("pub const CV_YUV2GRAY_I420:i32 = 0x%x;\n", CV_YUV2GRAY_I420);
    printf("pub const CV_YUV2GRAY_IYUV:i32 = 0x%x;\n", CV_YUV2GRAY_IYUV);
    printf("pub const CV_YUV2GRAY_NV12:i32 = 0x%x;\n", CV_YUV2GRAY_NV12);
    printf("pub const CV_YUV2GRAY_NV21:i32 = 0x%x;\n", CV_YUV2GRAY_NV21);
    printf("pub const CV_YUV2GRAY_UYNV:i32 = 0x%x;\n", CV_YUV2GRAY_UYNV);
    printf("pub const CV_YUV2GRAY_Y422:i32 = 0x%x;\n", CV_YUV2GRAY_Y422);
    printf("pub const CV_YUV2GRAY_YUNV:i32 = 0x%x;\n", CV_YUV2GRAY_YUNV);
    printf("pub const CV_YUV2GRAY_YUYV:i32 = 0x%x;\n", CV_YUV2GRAY_YUYV);
    printf("pub const CV_YUV2GRAY_YV12:i32 = 0x%x;\n", CV_YUV2GRAY_YV12);
    printf("pub const CV_YUV2GRAY_YVYU:i32 = 0x%x;\n", CV_YUV2GRAY_YVYU);
    printf("pub const CV_YUV2RGBA_I420:i32 = 0x%x;\n", CV_YUV2RGBA_I420);
    printf("pub const CV_YUV2RGBA_UYNV:i32 = 0x%x;\n", CV_YUV2RGBA_UYNV);
    printf("pub const CV_YUV2RGBA_Y422:i32 = 0x%x;\n", CV_YUV2RGBA_Y422);
    printf("pub const CV_YUV2RGBA_YUNV:i32 = 0x%x;\n", CV_YUV2RGBA_YUNV);
    printf("pub const CV_YUV2RGBA_YUYV:i32 = 0x%x;\n", CV_YUV2RGBA_YUYV);
    printf("pub const CV_YUV2RGB_I420:i32 = 0x%x;\n", CV_YUV2RGB_I420);
    printf("pub const CV_YUV2RGB_UYNV:i32 = 0x%x;\n", CV_YUV2RGB_UYNV);
    printf("pub const CV_YUV2RGB_Y422:i32 = 0x%x;\n", CV_YUV2RGB_Y422);
    printf("pub const CV_YUV2RGB_YUNV:i32 = 0x%x;\n", CV_YUV2RGB_YUNV);
    printf("pub const CV_YUV2RGB_YUYV:i32 = 0x%x;\n", CV_YUV2RGB_YUYV);
    printf("pub const CV_YUV420p2BGR:i32 = 0x%x;\n", CV_YUV420p2BGR);
    printf("pub const CV_YUV420p2BGRA:i32 = 0x%x;\n", CV_YUV420p2BGRA);
    printf("pub const CV_YUV420p2GRAY:i32 = 0x%x;\n", CV_YUV420p2GRAY);
    printf("pub const CV_YUV420p2RGB:i32 = 0x%x;\n", CV_YUV420p2RGB);
    printf("pub const CV_YUV420p2RGBA:i32 = 0x%x;\n", CV_YUV420p2RGBA);
    printf("pub const CV_YUV420sp2BGR:i32 = 0x%x;\n", CV_YUV420sp2BGR);
    printf("pub const CV_YUV420sp2BGRA:i32 = 0x%x;\n", CV_YUV420sp2BGRA);
    printf("pub const CV_YUV420sp2GRAY:i32 = 0x%x;\n", CV_YUV420sp2GRAY);
    printf("pub const CV_YUV420sp2RGB:i32 = 0x%x;\n", CV_YUV420sp2RGB);
    printf("pub const CV_YUV420sp2RGBA:i32 = 0x%x;\n", CV_YUV420sp2RGBA);
    printf("pub const FLOODFILL_FIXED_RANGE:i32 = 0x%x;\n", cv::FLOODFILL_FIXED_RANGE);
    printf("pub const FLOODFILL_MASK_ONLY:i32 = 0x%x;\n", cv::FLOODFILL_MASK_ONLY);
    printf("pub const INTER_AREA:i32 = 0x%x;\n", cv::INTER_AREA);
    printf("pub const INTER_BITS2:i32 = 0x%x;\n", cv::INTER_BITS2);
    printf("pub const INTER_CUBIC:i32 = 0x%x;\n", cv::INTER_CUBIC);
    printf("pub const INTER_LANCZOS4:i32 = 0x%x;\n", cv::INTER_LANCZOS4);
    printf("pub const INTER_LINEAR:i32 = 0x%x;\n", cv::INTER_LINEAR);
    printf("pub const INTER_NEAREST:i32 = 0x%x;\n", cv::INTER_NEAREST);
    printf("pub const INTER_TAB_SIZE:i32 = 0x%x;\n", cv::INTER_TAB_SIZE);
    printf("pub const INTER_TAB_SIZE2:i32 = 0x%x;\n", cv::INTER_TAB_SIZE2);
    printf("pub const MORPH_BLACKHAT:i32 = 0x%x;\n", cv::MORPH_BLACKHAT);
    printf("pub const MORPH_CLOSE:i32 = 0x%x;\n", cv::MORPH_CLOSE);
    printf("pub const MORPH_DILATE:i32 = 0x%x;\n", cv::MORPH_DILATE);
    printf("pub const MORPH_ERODE:i32 = 0x%x;\n", cv::MORPH_ERODE);
    printf("pub const MORPH_GRADIENT:i32 = 0x%x;\n", cv::MORPH_GRADIENT);
    printf("pub const MORPH_HITMISS:i32 = 0x%x;\n", cv::MORPH_HITMISS);
    printf("pub const MORPH_OPEN:i32 = 0x%x;\n", cv::MORPH_OPEN);
    printf("pub const MORPH_TOPHAT:i32 = 0x%x;\n", cv::MORPH_TOPHAT);
    printf("pub const RETR_CCOMP:i32 = 0x%x;\n", cv::RETR_CCOMP);
    printf("pub const RETR_EXTERNAL:i32 = 0x%x;\n", cv::RETR_EXTERNAL);
    printf("pub const RETR_FLOODFILL:i32 = 0x%x;\n", cv::RETR_FLOODFILL);
    printf("pub const RETR_LIST:i32 = 0x%x;\n", cv::RETR_LIST);
    printf("pub const RETR_TREE:i32 = 0x%x;\n", cv::RETR_TREE);
    printf("pub const THRESH_BINARY:i32 = 0x%x;\n", cv::THRESH_BINARY);
    printf("pub const THRESH_BINARY_INV:i32 = 0x%x;\n", cv::THRESH_BINARY_INV);
    printf("pub const THRESH_MASK:i32 = 0x%x;\n", cv::THRESH_MASK);
    printf("pub const THRESH_OTSU:i32 = 0x%x;\n", cv::THRESH_OTSU);
    printf("pub const THRESH_TOZERO:i32 = 0x%x;\n", cv::THRESH_TOZERO);
    printf("pub const THRESH_TOZERO_INV:i32 = 0x%x;\n", cv::THRESH_TOZERO_INV);
    printf("pub const THRESH_TRUNC:i32 = 0x%x;\n", cv::THRESH_TRUNC);
    printf("pub const WARP_INVERSE_MAP:i32 = 0x%x;\n", cv::WARP_INVERSE_MAP);
}
