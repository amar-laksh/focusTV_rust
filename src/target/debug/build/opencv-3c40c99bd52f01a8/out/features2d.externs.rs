extern "C" {
#[doc(hidden)] pub fn cv_features2d_cv_FASTX_InputArray_image_VectorOfKeyPoint_keypoints_int_threshold_bool_nonmaxSuppression_int_type(image: *mut c_void, keypoints: *mut c_void, threshold: i32, nonmaxSuppression: bool, _type: i32) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_FAST_InputArray_image_VectorOfKeyPoint_keypoints_int_threshold_bool_nonmaxSuppression(image: *mut c_void, keypoints: *mut c_void, threshold: i32, nonmaxSuppression: bool) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_computeRecallPrecisionCurve_VectorOfVectorOfDMatch_matches1to2_VectorOfVectorOfuchar_correctMatches1to2Mask_VectorOfPoint2f_recallPrecisionCurve(matches1to2: *mut c_void, correctMatches1to2Mask: *mut c_void, recallPrecisionCurve: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_drawKeypoints_Mat_image_VectorOfKeyPoint_keypoints_Mat_outImage_Scalar_color_int_flags(image: *mut c_void, keypoints: *mut c_void, outImage: *mut c_void, color: ::core::Scalar, flags: i32) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_drawMatches_Mat_img1_VectorOfKeyPoint_keypoints1_Mat_img2_VectorOfKeyPoint_keypoints2_VectorOfDMatch_matches1to2_Mat_outImg_Scalar_matchColor_Scalar_singlePointColor_VectorOfchar_matchesMask_int_flags(img1: *mut c_void, keypoints1: *mut c_void, img2: *mut c_void, keypoints2: *mut c_void, matches1to2: *mut c_void, outImg: *mut c_void, matchColor: ::core::Scalar, singlePointColor: ::core::Scalar, matchesMask: *mut c_void, flags: i32) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_drawMatches_Mat_img1_VectorOfKeyPoint_keypoints1_Mat_img2_VectorOfKeyPoint_keypoints2_VectorOfVectorOfDMatch_matches1to2_Mat_outImg_Scalar_matchColor_Scalar_singlePointColor_VectorOfVectorOfchar_matchesMask_int_flags(img1: *mut c_void, keypoints1: *mut c_void, img2: *mut c_void, keypoints2: *mut c_void, matches1to2: *mut c_void, outImg: *mut c_void, matchColor: ::core::Scalar, singlePointColor: ::core::Scalar, matchesMask: *mut c_void, flags: i32) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_evaluateFeatureDetector_Mat_img1_Mat_img2_Mat_H1to2_VectorOfKeyPoint_keypoints1_VectorOfKeyPoint_keypoints2_float_repeatability_int_correspCount_PtrOfFeatureDetector_fdetector(img1: *mut c_void, img2: *mut c_void, H1to2: *mut c_void, keypoints1: *mut c_void, keypoints2: *mut c_void, repeatability: f32, correspCount: i32, fdetector: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_evaluateGenericDescriptorMatcher_Mat_img1_Mat_img2_Mat_H1to2_VectorOfKeyPoint_keypoints1_VectorOfKeyPoint_keypoints2_VectorOfVectorOfDMatch_matches1to2_VectorOfVectorOfuchar_correctMatches1to2Mask_VectorOfPoint2f_recallPrecisionCurve_PtrOfGenericDescriptorMatcher_dmatch(img1: *mut c_void, img2: *mut c_void, H1to2: *mut c_void, keypoints1: *mut c_void, keypoints2: *mut c_void, matches1to2: *mut c_void, correctMatches1to2Mask: *mut c_void, recallPrecisionCurve: *mut c_void, dmatch: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_getNearestPoint_VectorOfPoint2f_recallPrecisionCurve_float_l_precision(recallPrecisionCurve: *mut c_void, l_precision: f32) -> cv_return_value_int;
#[doc(hidden)] pub fn cv_features2d_cv_getRecall_VectorOfPoint2f_recallPrecisionCurve_float_l_precision(recallPrecisionCurve: *mut c_void, l_precision: f32) -> cv_return_value_float;
#[doc(hidden)] pub fn cv_features2d_cv_initModule_features2d() -> cv_return_value_char;
#[doc(hidden)] pub fn cv_features2d_cv_windowedMatchingMask_VectorOfKeyPoint_keypoints1_VectorOfKeyPoint_keypoints2_float_maxDeltaX_float_maxDeltaY(keypoints1: *mut c_void, keypoints2: *mut c_void, maxDeltaX: f32, maxDeltaY: f32) -> cv_return_value_void_X;
pub fn cv_delete_BFMatcher(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_BFMatcher_BFMatcher_int_normType_bool_crossCheck(normType: i32, crossCheck: bool) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_features2d_cv_BFMatcher_isMaskSupported(instance: *const c_void) -> cv_return_value_char;
pub fn cv_delete_BOWImgDescriptorExtractor(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_BOWImgDescriptorExtractor_setVocabulary_Mat_vocabulary(instance: *mut c_void, vocabulary: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_BOWImgDescriptorExtractor_getVocabulary(instance: *const c_void) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_features2d_cv_BOWImgDescriptorExtractor_compute_Mat_image_VectorOfKeyPoint_keypoints_Mat_imgDescriptor_VectorOfVectorOfint_pointIdxsOfClusters_Mat_descriptors(instance: *mut c_void, image: *mut c_void, keypoints: *mut c_void, imgDescriptor: *mut c_void, pointIdxsOfClusters: *mut c_void, descriptors: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_BOWImgDescriptorExtractor_compute2_Mat_image_VectorOfKeyPoint_keypoints_Mat_imgDescriptor(instance: *mut c_void, image: *mut c_void, keypoints: *mut c_void, imgDescriptor: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_BOWImgDescriptorExtractor_descriptorSize(instance: *const c_void) -> cv_return_value_int;
#[doc(hidden)] pub fn cv_features2d_cv_BOWImgDescriptorExtractor_descriptorType(instance: *const c_void) -> cv_return_value_int;
pub fn cv_delete_BOWKMeansTrainer(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_BOWKMeansTrainer_cluster(instance: *const c_void) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_features2d_cv_BOWKMeansTrainer_cluster_Mat_descriptors(instance: *const c_void, descriptors: *mut c_void) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_features2d_cv_BOWTrainer_add_Mat_descriptors(instance: *mut c_void, descriptors: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_BOWTrainer_getDescriptors(instance: *const c_void) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_features2d_cv_BOWTrainer_descripotorsCount(instance: *const c_void) -> cv_return_value_int;
#[doc(hidden)] pub fn cv_features2d_cv_BOWTrainer_clear(instance: *mut c_void) -> cv_return_value_void;
pub fn cv_delete_BRISK(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_BRISK_BRISK_int_thresh_int_octaves_float_patternScale(thresh: i32, octaves: i32, patternScale: f32) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_features2d_cv_BRISK_descriptorSize(instance: *const c_void) -> cv_return_value_int;
#[doc(hidden)] pub fn cv_features2d_cv_BRISK_descriptorType(instance: *const c_void) -> cv_return_value_int;
pub fn cv_delete_BriefDescriptorExtractor(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_BriefDescriptorExtractor_BriefDescriptorExtractor_int_bytes(bytes: i32) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_features2d_cv_BriefDescriptorExtractor_descriptorSize(instance: *const c_void) -> cv_return_value_int;
#[doc(hidden)] pub fn cv_features2d_cv_BriefDescriptorExtractor_descriptorType(instance: *const c_void) -> cv_return_value_int;
#[doc(hidden)] pub fn cv_features2d_cv_DMatch_DMatch() -> cv_return_value_c_DMatch;
#[doc(hidden)] pub fn cv_features2d_cv_DMatch_DMatch_int__queryIdx_int__trainIdx_float__distance(_queryIdx: i32, _trainIdx: i32, _distance: f32) -> cv_return_value_c_DMatch;
#[doc(hidden)] pub fn cv_features2d_cv_DMatch_DMatch_int__queryIdx_int__trainIdx_int__imgIdx_float__distance(_queryIdx: i32, _trainIdx: i32, _imgIdx: i32, _distance: f32) -> cv_return_value_c_DMatch;
pub fn cv_delete_DenseFeatureDetector(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_DenseFeatureDetector_DenseFeatureDetector_float_initFeatureScale_int_featureScaleLevels_float_featureScaleMul_int_initXyStep_int_initImgBound_bool_varyXyStepWithScale_bool_varyImgBoundWithScale(initFeatureScale: f32, featureScaleLevels: i32, featureScaleMul: f32, initXyStep: i32, initImgBound: i32, varyXyStepWithScale: bool, varyImgBoundWithScale: bool) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_features2d_cv_DescriptorExtractor_compute_Mat_image_VectorOfKeyPoint_keypoints_Mat_descriptors(instance: *const c_void, image: *mut c_void, keypoints: *mut c_void, descriptors: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_DescriptorExtractor_compute_VectorOfMat_images_VectorOfVectorOfKeyPoint_keypoints_VectorOfMat_descriptors(instance: *const c_void, images: *mut c_void, keypoints: *mut c_void, descriptors: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_DescriptorExtractor_empty(instance: *const c_void) -> cv_return_value_char;
#[doc(hidden)] pub fn cv_features2d_cv_DescriptorMatcher_add_VectorOfMat_descriptors(instance: *mut c_void, descriptors: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_DescriptorMatcher_getTrainDescriptors(instance: *const c_void) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_features2d_cv_DescriptorMatcher_clear(instance: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_DescriptorMatcher_empty(instance: *const c_void) -> cv_return_value_char;
#[doc(hidden)] pub fn cv_features2d_cv_DescriptorMatcher_train(instance: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_DescriptorMatcher_match_Mat_queryDescriptors_Mat_trainDescriptors_VectorOfDMatch_matches_Mat_mask(instance: *const c_void, queryDescriptors: *mut c_void, trainDescriptors: *mut c_void, matches: *mut c_void, mask: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_DescriptorMatcher_knnMatch_Mat_queryDescriptors_Mat_trainDescriptors_VectorOfVectorOfDMatch_matches_int_k_Mat_mask_bool_compactResult(instance: *const c_void, queryDescriptors: *mut c_void, trainDescriptors: *mut c_void, matches: *mut c_void, k: i32, mask: *mut c_void, compactResult: bool) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_DescriptorMatcher_radiusMatch_Mat_queryDescriptors_Mat_trainDescriptors_VectorOfVectorOfDMatch_matches_float_maxDistance_Mat_mask_bool_compactResult(instance: *const c_void, queryDescriptors: *mut c_void, trainDescriptors: *mut c_void, matches: *mut c_void, maxDistance: f32, mask: *mut c_void, compactResult: bool) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_DescriptorMatcher_match_Mat_queryDescriptors_VectorOfDMatch_matches_VectorOfMat_masks(instance: *mut c_void, queryDescriptors: *mut c_void, matches: *mut c_void, masks: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_DescriptorMatcher_knnMatch_Mat_queryDescriptors_VectorOfVectorOfDMatch_matches_int_k_VectorOfMat_masks_bool_compactResult(instance: *mut c_void, queryDescriptors: *mut c_void, matches: *mut c_void, k: i32, masks: *mut c_void, compactResult: bool) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_DescriptorMatcher_radiusMatch_Mat_queryDescriptors_VectorOfVectorOfDMatch_matches_float_maxDistance_VectorOfMat_masks_bool_compactResult(instance: *mut c_void, queryDescriptors: *mut c_void, matches: *mut c_void, maxDistance: f32, masks: *mut c_void, compactResult: bool) -> cv_return_value_void;
pub fn cv_delete_DrawMatchesFlags(ptr : *mut c_void);
pub fn cv_delete_DynamicAdaptedFeatureDetector(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_DynamicAdaptedFeatureDetector_empty(instance: *const c_void) -> cv_return_value_char;
pub fn cv_delete_FREAK(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_FREAK_FREAK_bool_orientationNormalized_bool_scaleNormalized_float_patternScale_int_nOctaves_VectorOfint_selectedPairs(orientationNormalized: bool, scaleNormalized: bool, patternScale: f32, nOctaves: i32, selectedPairs: *mut c_void) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_features2d_cv_FREAK_FREAK_FREAK_rhs(rhs: *mut c_void) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_features2d_cv_FREAK_descriptorSize(instance: *const c_void) -> cv_return_value_int;
#[doc(hidden)] pub fn cv_features2d_cv_FREAK_descriptorType(instance: *const c_void) -> cv_return_value_int;
#[doc(hidden)] pub fn cv_features2d_cv_FREAK_selectPairs_VectorOfMat_images_VectorOfVectorOfKeyPoint_keypoints_double_corrThresh_bool_verbose(instance: *mut c_void, images: *mut c_void, keypoints: *mut c_void, corrThresh: f64, verbose: bool) -> cv_return_value_void_X;
pub fn cv_delete_FastAdjuster(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_FastAdjuster_FastAdjuster_int_init_thresh_bool_nonmax_int_min_thresh_int_max_thresh(init_thresh: i32, nonmax: bool, min_thresh: i32, max_thresh: i32) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_features2d_cv_FastAdjuster_tooFew_int_minv_int_n_detected(instance: *mut c_void, minv: i32, n_detected: i32) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_FastAdjuster_tooMany_int_maxv_int_n_detected(instance: *mut c_void, maxv: i32, n_detected: i32) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_FastAdjuster_good(instance: *const c_void) -> cv_return_value_char;
pub fn cv_delete_FastFeatureDetector(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_FastFeatureDetector_FastFeatureDetector_int_threshold_bool_nonmaxSuppression(threshold: i32, nonmaxSuppression: bool) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_features2d_cv_FeatureDetector_detect_Mat_image_VectorOfKeyPoint_keypoints_Mat_mask(instance: *const c_void, image: *mut c_void, keypoints: *mut c_void, mask: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_FeatureDetector_detect_VectorOfMat_images_VectorOfVectorOfKeyPoint_keypoints_VectorOfMat_masks(instance: *const c_void, images: *mut c_void, keypoints: *mut c_void, masks: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_FeatureDetector_empty(instance: *const c_void) -> cv_return_value_char;
#[doc(hidden)] pub fn cv_features2d_cv_FeatureDetector_create_String_detectorType(instance: *mut c_void, detectorType: *const c_char) -> cv_return_value_void_X;
pub fn cv_delete_FlannBasedMatcher(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_FlannBasedMatcher_add_VectorOfMat_descriptors(instance: *mut c_void, descriptors: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_FlannBasedMatcher_clear(instance: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_FlannBasedMatcher_train(instance: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_FlannBasedMatcher_isMaskSupported(instance: *const c_void) -> cv_return_value_char;
pub fn cv_delete_GFTTDetector(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_GFTTDetector_GFTTDetector_int_maxCorners_double_qualityLevel_double_minDistance_int_blockSize_bool_useHarrisDetector_double_k(maxCorners: i32, qualityLevel: f64, minDistance: f64, blockSize: i32, useHarrisDetector: bool, k: f64) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_features2d_cv_GenericDescriptorMatcher_add_VectorOfMat_images_VectorOfVectorOfKeyPoint_keypoints(instance: *mut c_void, images: *mut c_void, keypoints: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_GenericDescriptorMatcher_getTrainImages(instance: *const c_void) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_features2d_cv_GenericDescriptorMatcher_getTrainKeypoints(instance: *const c_void) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_features2d_cv_GenericDescriptorMatcher_clear(instance: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_GenericDescriptorMatcher_train(instance: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_GenericDescriptorMatcher_classify_Mat_queryImage_VectorOfKeyPoint_queryKeypoints_Mat_trainImage_VectorOfKeyPoint_trainKeypoints(instance: *const c_void, queryImage: *mut c_void, queryKeypoints: *mut c_void, trainImage: *mut c_void, trainKeypoints: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_GenericDescriptorMatcher_classify_Mat_queryImage_VectorOfKeyPoint_queryKeypoints(instance: *mut c_void, queryImage: *mut c_void, queryKeypoints: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_GenericDescriptorMatcher_match_Mat_queryImage_VectorOfKeyPoint_queryKeypoints_Mat_trainImage_VectorOfKeyPoint_trainKeypoints_VectorOfDMatch_matches_Mat_mask(instance: *const c_void, queryImage: *mut c_void, queryKeypoints: *mut c_void, trainImage: *mut c_void, trainKeypoints: *mut c_void, matches: *mut c_void, mask: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_GenericDescriptorMatcher_knnMatch_Mat_queryImage_VectorOfKeyPoint_queryKeypoints_Mat_trainImage_VectorOfKeyPoint_trainKeypoints_VectorOfVectorOfDMatch_matches_int_k_Mat_mask_bool_compactResult(instance: *const c_void, queryImage: *mut c_void, queryKeypoints: *mut c_void, trainImage: *mut c_void, trainKeypoints: *mut c_void, matches: *mut c_void, k: i32, mask: *mut c_void, compactResult: bool) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_GenericDescriptorMatcher_radiusMatch_Mat_queryImage_VectorOfKeyPoint_queryKeypoints_Mat_trainImage_VectorOfKeyPoint_trainKeypoints_VectorOfVectorOfDMatch_matches_float_maxDistance_Mat_mask_bool_compactResult(instance: *const c_void, queryImage: *mut c_void, queryKeypoints: *mut c_void, trainImage: *mut c_void, trainKeypoints: *mut c_void, matches: *mut c_void, maxDistance: f32, mask: *mut c_void, compactResult: bool) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_GenericDescriptorMatcher_match_Mat_queryImage_VectorOfKeyPoint_queryKeypoints_VectorOfDMatch_matches_VectorOfMat_masks(instance: *mut c_void, queryImage: *mut c_void, queryKeypoints: *mut c_void, matches: *mut c_void, masks: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_GenericDescriptorMatcher_knnMatch_Mat_queryImage_VectorOfKeyPoint_queryKeypoints_VectorOfVectorOfDMatch_matches_int_k_VectorOfMat_masks_bool_compactResult(instance: *mut c_void, queryImage: *mut c_void, queryKeypoints: *mut c_void, matches: *mut c_void, k: i32, masks: *mut c_void, compactResult: bool) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_GenericDescriptorMatcher_radiusMatch_Mat_queryImage_VectorOfKeyPoint_queryKeypoints_VectorOfVectorOfDMatch_matches_float_maxDistance_VectorOfMat_masks_bool_compactResult(instance: *mut c_void, queryImage: *mut c_void, queryKeypoints: *mut c_void, matches: *mut c_void, maxDistance: f32, masks: *mut c_void, compactResult: bool) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_GenericDescriptorMatcher_empty(instance: *const c_void) -> cv_return_value_char;
pub fn cv_delete_GridAdaptedFeatureDetector(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_GridAdaptedFeatureDetector_GridAdaptedFeatureDetector_PtrOfFeatureDetector_detector_int_maxTotalKeypoints_int_gridRows_int_gridCols(detector: *mut c_void, maxTotalKeypoints: i32, gridRows: i32, gridCols: i32) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_features2d_cv_GridAdaptedFeatureDetector_empty(instance: *const c_void) -> cv_return_value_char;
pub fn cv_delete_Hamming(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_KeyPoint_KeyPoint() -> cv_return_value_c_KeyPoint;
#[doc(hidden)] pub fn cv_features2d_cv_KeyPoint_KeyPoint_Point2f__pt_float__size_float__angle_float__response_int__octave_int__class_id(_pt: ::core::Point2f, _size: f32, _angle: f32, _response: f32, _octave: i32, _class_id: i32) -> cv_return_value_c_KeyPoint;
#[doc(hidden)] pub fn cv_features2d_cv_KeyPoint_KeyPoint_float_x_float_y_float__size_float__angle_float__response_int__octave_int__class_id(x: f32, y: f32, _size: f32, _angle: f32, _response: f32, _octave: i32, _class_id: i32) -> cv_return_value_c_KeyPoint;
#[doc(hidden)] pub fn cv_features2d_cv_KeyPoint_hash(instance: ::features2d::KeyPoint) -> cv_return_value_std_size_t;
#[doc(hidden)] pub fn cv_features2d_cv_KeyPoint_convert_VectorOfKeyPoint_keypoints_VectorOfPoint2f_points2f_VectorOfint_keypointIndexes(instance: ::features2d::KeyPoint, keypoints: *mut c_void, points2f: *mut c_void, keypointIndexes: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_KeyPoint_convert_VectorOfPoint2f_points2f_VectorOfKeyPoint_keypoints_float_size_float_response_int_octave_int_class_id(instance: ::features2d::KeyPoint, points2f: *mut c_void, keypoints: *mut c_void, size: f32, response: f32, octave: i32, class_id: i32) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_KeyPoint_overlap_KeyPoint_kp1_KeyPoint_kp2(instance: ::features2d::KeyPoint, kp1: ::features2d::KeyPoint, kp2: ::features2d::KeyPoint) -> cv_return_value_float;
pub fn cv_delete_KeyPointsFilter(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_KeyPointsFilter_KeyPointsFilter() -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_features2d_cv_KeyPointsFilter_runByImageBorder_VectorOfKeyPoint_keypoints_Size_imageSize_int_borderSize(instance: *mut c_void, keypoints: *mut c_void, imageSize: ::core::Size, borderSize: i32) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_KeyPointsFilter_runByKeypointSize_VectorOfKeyPoint_keypoints_float_minSize_float_maxSize(instance: *mut c_void, keypoints: *mut c_void, minSize: f32, maxSize: f32) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_KeyPointsFilter_runByPixelsMask_VectorOfKeyPoint_keypoints_Mat_mask(instance: *mut c_void, keypoints: *mut c_void, mask: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_KeyPointsFilter_removeDuplicated_VectorOfKeyPoint_keypoints(instance: *mut c_void, keypoints: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_KeyPointsFilter_retainBest_VectorOfKeyPoint_keypoints_int_npoints(instance: *mut c_void, keypoints: *mut c_void, npoints: i32) -> cv_return_value_void;
pub fn cv_delete_MSER(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_MSER_MSER_int__delta_int__min_area_int__max_area_double__max_variation_double__min_diversity_int__max_evolution_double__area_threshold_double__min_margin_int__edge_blur_size(_delta: i32, _min_area: i32, _max_area: i32, _max_variation: f64, _min_diversity: f64, _max_evolution: i32, _area_threshold: f64, _min_margin: f64, _edge_blur_size: i32) -> cv_return_value_void_X;
pub fn cv_delete_ORB(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_ORB_ORB_int_nfeatures_float_scaleFactor_int_nlevels_int_edgeThreshold_int_firstLevel_int_WTA_K_int_scoreType_int_patchSize(nfeatures: i32, scaleFactor: f32, nlevels: i32, edgeThreshold: i32, firstLevel: i32, WTA_K: i32, scoreType: i32, patchSize: i32) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_features2d_cv_ORB_descriptorSize(instance: *const c_void) -> cv_return_value_int;
#[doc(hidden)] pub fn cv_features2d_cv_ORB_descriptorType(instance: *const c_void) -> cv_return_value_int;
pub fn cv_delete_OpponentColorDescriptorExtractor(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_OpponentColorDescriptorExtractor_descriptorSize(instance: *const c_void) -> cv_return_value_int;
#[doc(hidden)] pub fn cv_features2d_cv_OpponentColorDescriptorExtractor_descriptorType(instance: *const c_void) -> cv_return_value_int;
#[doc(hidden)] pub fn cv_features2d_cv_OpponentColorDescriptorExtractor_empty(instance: *const c_void) -> cv_return_value_char;
pub fn cv_delete_PyramidAdaptedFeatureDetector(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_PyramidAdaptedFeatureDetector_PyramidAdaptedFeatureDetector_PtrOfFeatureDetector_detector_int_maxLevel(detector: *mut c_void, maxLevel: i32) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_features2d_cv_PyramidAdaptedFeatureDetector_empty(instance: *const c_void) -> cv_return_value_char;
pub fn cv_delete_SimpleBlobDetector(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_SimpleBlobDetector_Params_Params() -> cv_return_value_c_SimpleBlobDetector_Params;
pub fn cv_delete_StarAdjuster(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_StarAdjuster_StarAdjuster_double_initial_thresh_double_min_thresh_double_max_thresh(initial_thresh: f64, min_thresh: f64, max_thresh: f64) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_features2d_cv_StarAdjuster_tooFew_int_minv_int_n_detected(instance: *mut c_void, minv: i32, n_detected: i32) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_StarAdjuster_tooMany_int_maxv_int_n_detected(instance: *mut c_void, maxv: i32, n_detected: i32) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_StarAdjuster_good(instance: *const c_void) -> cv_return_value_char;
pub fn cv_delete_StarDetector(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_StarDetector_StarDetector_int__maxSize_int__responseThreshold_int__lineThresholdProjected_int__lineThresholdBinarized_int__suppressNonmaxSize(_maxSize: i32, _responseThreshold: i32, _lineThresholdProjected: i32, _lineThresholdBinarized: i32, _suppressNonmaxSize: i32) -> cv_return_value_void_X;
pub fn cv_delete_SurfAdjuster(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_SurfAdjuster_SurfAdjuster_double_initial_thresh_double_min_thresh_double_max_thresh(initial_thresh: f64, min_thresh: f64, max_thresh: f64) -> cv_return_value_void_X;
#[doc(hidden)] pub fn cv_features2d_cv_SurfAdjuster_tooFew_int_minv_int_n_detected(instance: *mut c_void, minv: i32, n_detected: i32) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_SurfAdjuster_tooMany_int_maxv_int_n_detected(instance: *mut c_void, maxv: i32, n_detected: i32) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_SurfAdjuster_good(instance: *const c_void) -> cv_return_value_char;
pub fn cv_delete_VectorDescriptorMatcher(ptr : *mut c_void);
#[doc(hidden)] pub fn cv_features2d_cv_VectorDescriptorMatcher_add_VectorOfMat_imgCollection_VectorOfVectorOfKeyPoint_pointCollection(instance: *mut c_void, imgCollection: *mut c_void, pointCollection: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_VectorDescriptorMatcher_clear(instance: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_VectorDescriptorMatcher_train(instance: *mut c_void) -> cv_return_value_void;
#[doc(hidden)] pub fn cv_features2d_cv_VectorDescriptorMatcher_isMaskSupported(instance: *mut c_void) -> cv_return_value_char;
#[doc(hidden)] pub fn cv_features2d_cv_VectorDescriptorMatcher_empty(instance: *const c_void) -> cv_return_value_char;
#[doc(hidden)] pub fn cv_features2d_cv_VectorDescriptorMatcher_clone_bool_emptyTrainData(instance: *const c_void, emptyTrainData: bool) -> cv_return_value_void_X;
}
